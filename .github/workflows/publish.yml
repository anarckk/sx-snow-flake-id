name: Publish to npm

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

# 显式设置权限
permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Check version change
        id: check_version
        if: github.event_name == 'push'
        run: |
          # 获取当前提交的版本
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # 获取上一次提交的版本
          git fetch origin main --depth=2
          PREVIOUS_VERSION=$(git show HEAD^:package.json 2>/dev/null | node -p "JSON.parse(require('fs').readFileSync(0, 'utf8')).version" || echo "")
          
          if [ -z "$PREVIOUS_VERSION" ]; then
            echo "No previous version found, assuming version changed"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          elif [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged: $CURRENT_VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag on version change
        if: github.event_name == 'push' && steps.check_version.outputs.version_changed == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag "v$VERSION"
          # 使用标准的 GitHub Actions token 格式
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "v$VERSION"
          echo "Created tag: v$VERSION"

      - name: Publish on version change
        if: github.event_name == 'push' && steps.check_version.outputs.version_changed == 'true'
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}